{
  "hash": "74c1918d11ef0893ac41369b7a91214e",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat: live-html\nwebr:\n  engine: knitr\n  packages:\n    - gt\n    - medicaldata\n---\n\n\n\n\n\n# Introduction\n\nThis quarto book, with the help of wasm and webr, allows you to edit and run code within live code chunks (a capability called quarto-live).\n\nNow it is your turn to write some code.\n\nAdd some style and formatting to the gt table below. Replace the fairly generic `opt_stylize` function with your own style (though the six options for opt_stylize can get you started quickly).\nLook at some options either [here](https://gt.albert-rapp.de/formatting), or in the {gt} pakage webpage [here](https://gt.rstudio.com/reference/index.html). Experiment with the `fmt_` and the `cols_` families of functions.\nNote that you can change opt_stylize to styles 1-6, and the default colors include \"blue\", \"cyan\", \"pink\", \"green\", \"red\", or \"gray\"\n\n```{webr-r}\nscurvy <- medicaldata::scurvy\nscurvy |> \n  gt() |> \n  opt_stylize(style = 3, color = \"red\", add_row_striping = TRUE)\n```\n\nConsider renaming the columns, by adding code that looks a bit like this\n(pick your own favorite column names):\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n|> \ncols_label(treatment = \"Rx\",\n          dosing_regimen_for_scurvy = \"Dose\",\n           gum_rot_d6 = \"Gum Rot\",\n           skin_sores_d6 = \"Skin Sores\",\n           weakness_of_the_knees_d6 = \"Weakness\",\n           lassitude_d6 = \"Lassitude\",\n           fit_for_duty_d6 = \"Fit\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}