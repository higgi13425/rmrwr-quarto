{
  "hash": "09c99717c60785948953525675403395",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat: live-html\nwebr:\n  engine: knitr\n  packages:\n    - dplyr\n    - medicaldata\n---\n\n\n\n\n\n\n:::: {.panel-tabset}\n\n## Exercise\n\n```{webr-r}\n#| setup: true\n#| exercise: ex_4\nlibrary(dplyr)\n```\n\n```{webr-r}\n#| exercise: ex_4\nstarwars |> ______\n```\n\n## Hints\n\n::: { .hint exercise=\"ex_4\"}\nConsider using the `filter()` function from `dplyr`.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstarwars |> filter(______)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in parse(text = input): <text>:1:21: unexpected input\n1: starwars |> filter(__\n                        ^\n```\n\n\n:::\n:::\n\n\n\n\n:::\n\n## Solution\n\n::: { .solution exercise=\"ex_4\" }\nUse the `filter()` function from `dplyr`:\n\n```{webr-r}\nstarwars |>                                 #<1>\n    filter(species == \"Droid\")              #<2>\n```\n1. Take the `starwars` dataset, and then,\n2. Filter for the \"Droid\" species.\n:::\n\n::::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}